<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Json RPC client</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <style>
        body {
            margin: 30px;
        }
    
        .flex {
            display: flex;
            flex-direction: row;
        }
        
        .form {
            margin-bottom: 15px;
        }
        
        .form button {
            margin-right: 15px;
        }
    </style>
</head>
<body>
<main>
    <div class="flex" style="margin-bottom: 15px;">
        <button class="btn btn-primary" style="width: 100px" onclick="getM();">GetM</button>
        <p id="result" style="font-size: 24px; margin: 0; margin-left: 15px;">Result: </p>
    </div>
    <form class="flex form" onsubmit="_setM(); return false;">
        <button type="button" class="btn btn-secondary" onclick="_setM();">SetM</button>
        <input type="text" id="setM" name="setM">
    </form>
    <form class="flex form" onsubmit="_addM(); return false;">
        <button type="button" class="btn btn-secondary" onclick="_addM();">AddM</button>
        <input type="text" id="addM" name="addM">
    </form>
    <form class="flex form" onsubmit="_subM(); return false;">
        <button type="button" class="btn btn-secondary" onclick="_subM();">SubM</button>
        <input type="text" id="subM" name="subM">
    </form>
    <form class="flex form" onsubmit="_mulM(); return false;">
        <button type="button" class="btn btn-secondary" onclick="_mulM();">MulM</button>
        <input type="text" id="mulM" name="mulM">
    </form>
    <form class="flex form" onsubmit="_divM(); return false;">
        <button type="button" class="btn btn-secondary" onclick="_divM();">DivM</button>
        <input type="text" id="divM" name="divM">
    </form>
    <div id="describe-error" style="color: #dc3545">
        
    </div>
</main>
<script
  src="https://code.jquery.com/jquery-3.6.1.min.js"
  integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="
  crossorigin="anonymous"></script>
<script>
const apiUrl = "/json-rpc";
const handleError = (error) => {
    document.querySelector("#describe-error").innerHTML = `Error occupied <br/> Code: ${error.code}. Message: ${error.message}`;
}
const handleData = (data) => {
    if (data.error) {
       handleError(data.error);
       return;
    }
    document.querySelector("#result").innerHTML = `Result: ${data.result}`;
}
const getM = async () => {
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.GetM",
            "params": ["myValue"]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
const _setM = async () => {
    const setValue = document.querySelector("#setM").value;
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.SetM",
            "params": ["myValue", Number.parseInt(setValue)]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
const _addM = async () => {
    const setValue = document.querySelector("#addM").value;
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.AddM",
            "params": ["myValue", Number.parseInt(setValue)]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
const _subM = async () => {
    const setValue = document.querySelector("#subM").value;
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.SubM",
            "params": ["myValue", Number.parseInt(setValue)]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
const _mulM = async () => {
    const setValue = document.querySelector("#mulM").value;
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.MulM",
            "params": ["myValue", Number.parseInt(setValue)]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
const _divM = async () => {
    const setValue = document.querySelector("#divM").value;
    $.ajax({
        url: apiUrl,
        type: "POST",
        data: JSON.stringify({
            "id": 1,
            "jsonrpc": "2.0",
            "method": "JRService.DivM",
            "params": ["myValue", Number.parseInt(setValue)]
        }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: handleData,
        error: handleError,
    })
}
</script>
</body>
</html>